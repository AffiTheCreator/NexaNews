version: '3.8'

services:
  nexanews:
    hostname: nexanews
    container_name: nexanews
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./volumes/nexanews_container/:/home/nexanews/
    ports:
      - 8501:8501
      - 5678:5678
    networks:
      - nexanews-net
    depends_on:
      elasticsearch: { condition: service_healthy }
    healthcheck:
      test: curl -s http://nexanews:8501 >/dev/null || exit 1
      timeout: 2s
      retries: 50
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    hostname: elasticsearch
    container_name: elasticsearch
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml
      - elasticsearch_nexanews:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      timeout: 2s
      retries: 50
    networks:
      - nexanews-net

  kibana:
    container_name: kibana
    hostname: kibana
    image: "docker.elastic.co/kibana/kibana:8.10.2"
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/kibana.yml
    ports: 
      - '5601:5601'
    networks: 
      - nexanews-net
    depends_on:
      elasticsearch: { condition: service_healthy }
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/"]
      timeout: 2s
      retries: 6

  # #Metricbeat container
  # metricbeat:
  #   container_name: metricbeat
  #   hostname: metricbeat
  #   user: root #To read the docker socket
  #   image: docker.elastic.co/beats/metricbeat:8.10.2
  #   volumes:
  #     #Mount the metricbeat configuration so users can make edits.
  #     - ./config/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
  #     #Mount the modules.d directory into the container. This allows user to potentially make changes to the modules and they will be dynamically loaded.
  #     - ./config/beats/metricbeat/modules.d/:/usr/share/metricbeat/modules.d/
  #     #The commented sections below enable Metricbeat to monitor the Docker host rather than the Metricbeat container. These are used by the system module.
  #     - /proc:/hostfs/proc:ro
  #     - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
  #     #Allows us to report on docker from the hosts information.
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     #We mount the host filesystem so we can report on disk usage with the system module.
  #     - /:/hostfs:ro
  #   command: metricbeat -e -system.hostfs=/hostfs -strict.perms=false
  #   networks: 
  #     - nexanews-net
  #   restart: on-failure
  #   depends_on:
  #     elasticsearch:  { condition: service_healthy }

# #Auditbeat container
#   auditbeat:
#     container_name: auditbeat
#     hostname: auditbeat
#     user: root #To read the docker socket
#     image: "docker.elastic.co/beats/auditbeat:8.10.2"
#     volumes:
#       #Mount the Auditbeat configuration so users can make edits.
#       - ./config/beats/auditbeat/auditbeat.yml:/usr/share/auditbeat/auditbeat.yml
#       #Allows us to report on docker from the hosts information.
#       - /var/run/docker.sock:/var/run/docker.sock
#     depends_on:
#       elasticsearch: { condition: service_healthy }
#     command: auditbeat -e -strict.perms=false
#     pid: "host" # Set the required permissions with pid and cap_add for Auditbeat
#     cap_add: ['AUDIT_CONTROL', 'AUDIT_READ']
#     networks: ['stack']
#     restart: on-failure

  # #Heartbeat container
  # heartbeat:
  #   container_name: heartbeat
  #   hostname: heartbeat
  #   user: root #To read the docker socket
  #   image: "docker.elastic.co/beats/heartbeat:8.10.2"
  #   volumes:
  #     #Mount the Heartbeat configuration so users can make edits.
  #     - ./config/beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
  #     #Allows us to report on docker from the hosts information.
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     elasticsearch: { condition: service_healthy }
  #   command: heartbeat -e -strict.perms=false
  #   networks: 
  #     - nexanews-net
  #   restart: on-failure

networks:
  nexanews-net:  
volumes:
  elasticsearch_nexanews:


  # ffmpeg:
  #   container_name: ffmpeg
  #   image: jrottenberg/ffmpeg
  #   #tty: true
  #   # networks:
  #   #   - b2c
  #   ports:
  #     - "29002:29000"
  #   tty: true
  #   entrypoint: "bash"
